// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(uuid()) // id is a string, @id makes it the primary key, @default sets the default value to uuid(), uuid() is a function that generates a unique identifier
  email        String    @unique // email is a string and unique
  username     String    @unique // username is a string and unique
  password     String // password is a string
  creationDate DateTime  @default(now()) // creationDate is a DateTime and @default(now()) sets the default value to the current date and time
  products     Product[] // productsIds is an array of Product models that the user owns, this is because the relation is one-to-many
}

model Product {
  id           String   @id @default(uuid()) // string, primary key, default value is generated by uuid()
  name         String   @db.VarChar(255) // string, max length is 255, varchar(255) is used for short text can get shorter if its value is shorter
  description  String   @db.Text // string, text type is used for long text
  price        Float // float, used for decimal numbers
  creationDate DateTime @default(now()) // DateTime, default value is the current date and time
  userId       String // string, foreign key of the User model who owns the product
  user         User     @relation(fields: [userId], references: [id]) // user is a relation to the User model, fields is the foreign key, references is the primary key
  updates      Update[]
}

enum UPDATE_STATUS {
  PENDING
  IN_PROGRESS
  DONE
}

model Update {
  id               String        @id @default(uuid())
  title            String        @db.VarChar(255)
  updateStatus     UPDATE_STATUS @default(IN_PROGRESS) // enum, default value is IN_PROGRESS
  creationDate     DateTime      @default(now())
  description      String
  body             String        @db.Text
  version          String
  assetUrl         String? // string, optional
  productUpdatedId String
  productUpdated   Product       @relation(fields: [productUpdatedId], references: [id]) // relation to the Product model, one product can have many updates
}
